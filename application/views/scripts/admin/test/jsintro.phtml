<div class = "page-header">
    <h1>JavaScript 1</h1>
</div>


<script>
    <?php
        $this->inlineScript()->captureStart();
    ?>
    // ne postoje asocijativni nizovi
    // nije OOP
    // Prototype based language
    
    var ime = "Ime1";
    var starost = 30;
    var polaznici = ["Aleksandar Stevanovic", "Natasa Lukic", "Aleksandra Petkovic"];
    
    for (var index in polaznici) {
        //alert(index + ': ' + polaznici[index]);
        //console.log -> za ispis u konzoli (inspect element)
    };
    
    console.log(polaznici);  // u browseru vec postoje objekti, jedan od njih je i console // window objekat je 'master' objekat browser-a
    //isto je kao window.console.log()
    // window.console
    
    //alert(ime);
    
    var polaznik = {
        'ime': 'Ime1',
        'prezime': 'Prezime1',
        starost: 30,
        ime2: 'Ime2',
        prezime2: 'Prezime2'
    };
    
//    for (var key in polaznik) {
//        console.log(key + ' -> ' . polaznik[key]);
//    }
    
    //alert(polaznik.prezime);
    
    //alert(polaznici[2]);
    
    
    //JSON - JavaScript Object Notation
    // primer u JSON formatu:
    var cubes = {
        name: 'Cubes d.o.o.',
        address: 'Bulevar Mihaila Pupina 181',
        courses: [
            {
                name: 'PHP',
                students: {
                    php01: 'Aleksandar Stevanovic',
                    php02: 'Natasa Lukic',
                    php03: 'Aleksandra Petkovic'
                }
            },
            {
                name: 'iOS',
                students: {
                    ios01: 'IOS 1',
                    ios02: 'IOS 2',
                    ios03: 'IOS 3',
                }
            }
        ]
    };
    // kada je fajl json (.json) onda je njegov tip "application/json" 
    
    
    //alert(cubes.courses[0].students.php03);
    //alert(cubes['courses'][0]['students']['php02']);
    //console.log(cubes):
    
    
    
    //kad imamo promenjivu koja se samo pojavi ona je property od objekta window
    //      znacajni:
    //      Document
    //      Screen
    //      Location
    
    var doubleTestNumber;
    function testF(testNumber) {
        doubleTestNumber = testNumber * 2;
        //console.log('Calling function testF ' . doubleTestNumber + '!');
    };
    
    testF(1);  //ovako se poziva funkcija
    testF(2);
    testF(3);
    testF(4);
    testF(5);
    //console.log('Double test number is: ' + doubleTestNumber);
    
    
    
    
    
    var testF2 = function() {
        console.log('Calling testF2');
    };
    
    testF2();
    
    //Object constructor
    function Polaznik(ime, prezime, starost) {
        this.ime = ime;
        this.prezime = prezime;
        this.starost = starost;
        
        this.predstaviSe = function() {
            return 'Ja sam ' + this.ime + ' ' + this.prezime + ' ' + this.starost + ' god.';
        };
    };
    
    // U JS sve je javno
    
    var p1 = new Polaznik('ime1', 'prezime1', 11);
    var p2 = new Polaznik('ime2', 'prezime2', 22);
    var p3 = new Polaznik('ime3', 'prezime3', 33);
    var p4 = new Polaznik('ime4', 'prezime4', 44);
    
    //mozemo naknadno da dodajemo property-e
    p4.getIme = function() {
        return this.ime;
    };
    
    console.log(p1.predstaviSe());
    console.log(p2.predstaviSe());
    console.log(p3.predstaviSe());
    console.log(p4.predstaviSe());
    
    //master objekat
    window;
    
    //working with computer screen
    window.screen;
    screen;
    
    //working with browser window location (address bar)
    window.location;
    location;
    
    //makes browser idle for 5000 miliseconds
//    setTimeout(function() {
//        location.href = "http://www.google.com"; //redirect from JavaScript
//        
//    }, 5000);
    
    
    //DOM - Document Object Model
    window.document;
    document;
    
    
    
    <?php
        $this->inlineScript()->captureEnd();
    ?>
</script>